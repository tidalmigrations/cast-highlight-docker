steps:
  - name: 'koalaman/shellcheck'
    args: ['--enable=all', 'entrypoint.sh']
    id: 'Check entrypoint script'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['run', '--privileged', 'linuxkit/binfmt:v0.8']
    id: 'initialize-qemu'
  - name: 'gcr.io/cloud-builders/docker'
    args: ['buildx', 'create', '--name', 'mybuilder']
    id: 'create-builder'
  - name: 'gcr.io/cloud-builders/docker'
    args: ['buildx', 'use', 'mybuilder']
    id: 'select-builder'
  - name: 'gcr.io/cloud-builders/docker'
    args: ['buildx', 'inspect', '--bootstrap']
    id: 'show-target-build-platforms'
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'buildx'
      - 'build'
      - '--platform=$_DOCKER_BUILDX_PLATFORMS'
      - '--tag=gcr.io/$PROJECT_ID/cast-highlight:$_DOCKER_IMAGE_TAG'
      - '--push'
      - '.'
    id: 'build-multi-architecture-container-image'

  - name: 'google/cloud-sdk:alpine'
    entrypoint: 'bash'
    args:
      - '-eEuo'
      - 'pipefail'
      - '-c'
      - |-
        git clone ${_TEST_REPO} "$$HOME/src"
        docker run --rm -v "$$HOME/src":/src \
          gcr.io/$PROJECT_ID/cast-highlight:$_DOCKER_IMAGE_TAG \
          cast --skipUpload --sourceDir /src
    id: 'Test container agains test repo'

options:
  env:
    - 'DOCKER_CLI_EXPERIMENTAL=enabled'
  dynamic_substitutions: true

substitutions:
  _TEST_REPO: https://github.com/tidalmigrations/schoolbus.git
  _DOCKER_BUILDX_PLATFORMS: 'linux/amd64,linux/arm64'
  _DOCKER_IMAGE_TAG: ${BRANCH_NAME/master/latest}
